{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./ts/client/client.tsx","webpack:///./ts/views/layout.tsx","webpack:///external \"express\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;ACvEA,4DAAkC;AAElC,mFAAkD;AAElD,IAAM,UAAU,GAAW,IAAI;AAC/B,IAAM,GAAG,GAAQ,OAAO,EAAE;AAE1B,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAEnC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAQ,EAAE,GAAQ;IAE9B,IAAM,UAAU,GAAa;QAC3B,KAAK,EAAE,QAAQ;QACf,OAAO,EAAE,EAAE;QACX,aAAa,EAAE,EAAE;KAClB;IAED,GAAG,CAAC,IAAI,CAAC,eAAM,CAAC,UAAU,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEF,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,cAAM,cAAO,CAAC,GAAG,CAAC,oCAAkC,UAAY,CAAC,EAA3D,CAA2D,CAAC;;;;;;;;;;;;;;;ACjB5E,cAAM,GAAG,UAAC,KAAc,IAAa,mLAKnC,KAAK,CAAC,KAAK,moBAqBH,KAAK,CAAC,OAAO,IAAI,EAAE,qMAKT,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,IAAI,EAAE,CAAC,gDAIzE,EAnCiD,CAmCjD;;;;;;;;;;;;ACzCD,oC","file":"client.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./ts/client/client.tsx\");\n","import * as React from 'react'\nimport * as ReactDOMServer from 'react-dom/server'\nimport * as express from 'express'\n\nimport { ITLayout, layout } from '../views/layout'\n\nconst clientPort: number = 4100\nconst app: any = express()\n\napp.use(express.static('./dist'))\napp.use(express.static('./public'))\n\napp.get('*', (req: any, res: any) => {\n\n  const clientProp: ITLayout = {\n    title: 'client',\n    content: '',\n    __INITSTATE__: {}\n  }\n\n  res.send(layout(clientProp))\n})\n\napp.listen(clientPort, () => console.log(`start client: http://localhost:${clientPort}`))","export interface ITLayout {\n  title: string\n  content: string\n  __INITSTATE__: any\n}\n\nexport const layout = (props:ITLayout): string => `\n  <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n      <title>${props.title}</title>\n      <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\n      <style>\n        ul,li {\n          margin: 0;\n          padding: 0;\n          list-style: none;\n        }\n        .itemlist{\n          margin-top: 20px\n        }\n        .itemlist li {\n          float: left;\n          width: 12%;\n          line-height: 2;\n          text-align: center;\n          cursor: pointer;\n        }\n      </style>\n    </head>\n    <body>\n      <div id=\"root\">${props.content || ''}</div>\n      <script src=\"/manifest.js\"></script>\n      <script src=\"/vendor.js\"></script>\n      <script src=\"/index.js\"></script>\n      <script>\n        window.__INITSTATE__ = ${JSON.stringify(props.__INITSTATE__ || {})}\n      </script>\n    </body>\n  </html>\n`","module.exports = require(\"express\");"],"sourceRoot":""}